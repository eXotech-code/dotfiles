#!/usr/bin/env python3

# imports
import sys
import argparse
import random

# arguments
class argParser(argparse.ArgumentParser):
    def parseError(self, message):
        sys.stderr.write('ERROR: %s\n' % message)
        self.print_help()
        sys.exit

parser = argParser()
parser.add_argument('length', type=int, help='defines lenght of the generated password')
args = parser.parse_args()

# object initialization
passwordList = []
chars = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'W', 'X', 'Y', 'Z']
lowerChars = [x.lower() for x in chars]
numbers = list(range(0, 9))

# adds more characters to the password list
def charsGenerator(chars, numbers):
    # change nubers, which is an integer list to list of strings
    numbersStr = ''.join(str(e) for e in numbers)
    # add lowercase characters to the list of chars
    chars.extend(lowerChars)
    # add numbers to the list of chars
    chars.extend(numbersStr)
    return chars

# generates the complete list, converts it to string and prints it
def gen(length, passwordList, chars, numbers):
    while len(passwordList) <= length:
        passwordList.extend(random.choice(charsGenerator(chars, numbers)))
    password = ''.join(passwordList)
    print(password)

length = args.length

gen(length, passwordList, chars, numbers)